package br.pucminas.arquiteturaBackend.bibliotecaAPI;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/v1/public/")
public class BibliotecaController {

	private List<Cliente> clientes = new ArrayList<>();

	// Clientes

	@GetMapping("clientes")
	public List<Cliente> all() {
		return clientes;
	}

	@PostMapping("clientes")
	Cliente newClient(@RequestBody Cliente newObject) {

		newObject.setId(new Random().nextLong());
		clientes.add(newObject);

		return newObject;
	}

	@PutMapping("clientes/{id}")
	Cliente replaceCliente(@RequestBody Cliente cliente, @PathVariable Long id) {

		clientes.stream().filter(p -> p.getId().equals(id)) .forEach(p -> {
			p.setContent(cliente.getContent());
		});

		return cliente;
	}

	@DeleteMapping("clientes/{id}")
	void deleteCliente(@PathVariable Long id) {
		System.out.println(id);
		clientes.removeIf(p -> p.getId().equals(id));
	}

}
